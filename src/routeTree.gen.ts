/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as FlowsImport } from './routes/flows'
import { Route as IndexImport } from './routes/index'
import { Route as FlowsNewImport } from './routes/flows.new'
import { Route as FlowsIdImport } from './routes/flows.$id'
import { Route as FlowsIdEditImport } from './routes/flows.$id.edit'

// Create/Update Routes

const FlowsRoute = FlowsImport.update({
  path: '/flows',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const FlowsNewRoute = FlowsNewImport.update({
  path: '/new',
  getParentRoute: () => FlowsRoute,
} as any)

const FlowsIdRoute = FlowsIdImport.update({
  path: '/$id',
  getParentRoute: () => FlowsRoute,
} as any)

const FlowsIdEditRoute = FlowsIdEditImport.update({
  path: '/edit',
  getParentRoute: () => FlowsIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/flows': {
      preLoaderRoute: typeof FlowsImport
      parentRoute: typeof rootRoute
    }
    '/flows/$id': {
      preLoaderRoute: typeof FlowsIdImport
      parentRoute: typeof FlowsImport
    }
    '/flows/new': {
      preLoaderRoute: typeof FlowsNewImport
      parentRoute: typeof FlowsImport
    }
    '/flows/$id/edit': {
      preLoaderRoute: typeof FlowsIdEditImport
      parentRoute: typeof FlowsIdImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  FlowsRoute.addChildren([
    FlowsIdRoute.addChildren([FlowsIdEditRoute]),
    FlowsNewRoute,
  ]),
])

/* prettier-ignore-end */
